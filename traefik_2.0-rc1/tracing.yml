version: "3.7"

networks:
  traefik:
    external: true

services:

  jaeger:
    image: jaegertracing/all-in-one:1.14
    networks:
      - traefik

    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    #ports:
    #  - "5775:5775/udp"
    #  - "6831:6831/udp"
    #  - "6832:6832/udp"
    #  - "5778:5778"
    #  - "16686:16686"
    #  - "14268:14268"
    #  - "9411:9411"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.enable: 'true'
        traefik.docker.network: 'traefik'
        traefik.http.routers.jaeger.rule: 'Host(`jaeger.example.com`)'
        traefik.http.routers.jaeger.middlewares: 'redirectscheme'
        traefik.http.routers.jaeger.entrypoints: 'web'
        # https handling
        traefik.http.routers.jaeger.rule: 'Host(`jaeger.example.com`)'
        traefik.http.routers.jaeger.entrypoints: 'webs'
        traefik.http.routers.jaeger.tls: ''
        traefik.http.routers.jaeger.tls.certresolver: 'httpchallenge'

        traefik.http.services.jaeger.loadbalancer.server.port: '16686'
      placement:
        constraints:
          - node.role == worker

  hotrod:
    image: jaegertracing/example-hotrod:1.14
    networks:
      - traefik
    command: all
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.enable: 'true'
        traefik.docker.network: 'traefik'
        traefik.http.routers.hotrod.rule: 'Host(`hotrod.example.com`)'
        traefik.http.routers.hotrod.middlewares: 'redirectscheme'
        traefik.http.routers.hotrod.entrypoints: 'web'
        # https handling
        traefik.http.routers.hotrod.rule: 'Host(`hotrod.example.com`)'
        traefik.http.routers.hotrod.entrypoints: 'webs'
        traefik.http.routers.hotrod.tls: ''
        traefik.http.routers.hotrod.tls.certresolver: 'httpchallenge'

        traefik.http.services.hotrod.loadbalancer.server.port: '8080'
      placement:
        constraints:
          - node.role == worker
